<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on ARC</title>
    <link>https://arcman7.github.io/en/tags/javascript/</link>
    <description>Recent content in javascript on ARC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</managingEditor>
    <webMaster>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</webMaster>
    <copyright>Â©2020, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 03 Mar 2020 13:12:16 -0800</lastBuildDate>
    
        <atom:link href="https://arcman7.github.io/en/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Javascript Dependency Tree</title>
        <link>https://arcman7.github.io/en/posts/javascript_build_dependency_tree/</link>
        <pubDate>Tue, 03 Mar 2020 13:12:16 -0800</pubDate>
        <author>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</author>
        <guid>https://arcman7.github.io/en/posts/javascript_build_dependency_tree/</guid>
        <description>Introduction In this post I will outline how to run tasks/jobs that have dependencies on other tasks such as builds or testing. When one task is dependent on another it means that the task cannot be be started or executed until it has the results from a previous task/job.
Imagine you plan on making an omelette, this task requires that you have eggs among other things. We can say then that this task, &amp;ldquo;make-omelette&amp;rdquo;, has a dependency on eggs.</description>
      </item>
      
      <item>
        <title>Ice Age</title>
        <link>https://arcman7.github.io/en/games/ice-age/</link>
        <pubDate>Sat, 08 Feb 2020 15:48:57 -0800</pubDate>
        <author>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</author>
        <guid>https://arcman7.github.io/en/games/ice-age/</guid>
        <description>Adventure throughout Azeroth and beyond following the events of the Frozen Throne, utilizing a real-time combat game system.
Play here
NOTE: Game development is currently on hold. Check back here in the near future to see updates! I will be using a generalized RL-agent to improve the game mechanics as well as player experience.</description>
      </item>
      
      <item>
        <title>Vue.js Game</title>
        <link>https://arcman7.github.io/en/posts/vue-js-game/</link>
        <pubDate>Thu, 30 Jan 2020 16:30:43 -0800</pubDate>
        <author>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</author>
        <guid>https://arcman7.github.io/en/posts/vue-js-game/</guid>
        <description>So I built a game engine in javascript using Vue.js to do the rendering. It&amp;rsquo;s in an in-progress project, and therefore this post is as well.
Play here</description>
      </item>
      
      <item>
        <title>Javascript: Sequential Task Queue</title>
        <link>https://arcman7.github.io/en/posts/javascript-squential-task-que/</link>
        <pubDate>Thu, 30 Jan 2020 11:36:23 -0800</pubDate>
        <author>andrewryancarpenter77@gmail.com (Andrew Ryan Carpenter)</author>
        <guid>https://arcman7.github.io/en/posts/javascript-squential-task-que/</guid>
        <description>I decided to write this post as the result of attempting to find a pattern for executing any number of asynchronous tasks in a specified order with javascript. It came as a surprise to me that this isn&amp;rsquo;t supported out of the box in any modern browers javascript engine.
After googling around for a few minutes I came across this related blog post Decembersoft Inc. which comes close but doesn&amp;rsquo;t yield a working solution.</description>
      </item>
      
    
  </channel>
</rss>